openapi: 3.0.0
info:
  version: 1.0.0
  title: Admin & IntelliQ Routes API
  description: API for managing questionnaires and answers in the intelliQ application
servers:
  - url: https://localhost:3001
  
components:
  schemas:
    Option:
      type: object
      properties:
        optID:
          type: string
          description: Option id
          example: "001"
        opttxt:
          type: string
          description: Option's text
          example: "Option 1"
        nextqID:
          type: string
          default: "NULL"
          description: ID of the next question
          example: "002"

    Question:
      type: object
      properties:
        qID:
          type: string
          description: Question id
          example: "001"
        qtext:
          type: string
          description: Question text
          example: "What is your favorite color?"
        required:
          type: boolean
          description: Indicates if the question is required or not
          example: true
        type:
          type: string
          description: Question type
          example: "single-choice"
        options:
          type: array
          items:
            $ref: "#/components/schemas/Option"
          description: List of options for the question

    BlankSchema:
      type: object
      properties:
        questionnaireTitle:
          type: string
          description: Title of the questionnaire
          example: "Sample Questionnaire"
        keywords:
          type: array
          items:
            type: string
          description: Keywords related to the questionnaire
          example: ["survey", "feedback"]
        questions:
          type: array
          items:
            $ref: "#/components/schemas/Question"
          description: List of questions in the questionnaire

  examples:
    BlankSchema:
      summary: Example of a BlankSchema schema
      value:
        questionnaireTitle: "Sample Questionnaire"
        keywords: ["survey", "feedback"]
        questions:
          - qID: "001"
            qtext: "What is your favorite color?"
            required: true
            type: "single-choice"
            options:
              - optID: "001"
                opttxt: "Red"
              - optID: "002"
                opttxt: "Blue"
          - qID: "002"
            qtext: "What is your age?"
            required: false
            type: "text"


paths:
  /admin/healthcheck:
    get:
      tags:
        - Admin
      description: Check the health of the API and the database connection
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: OK
                  dbconnection:
                    type: string
                    example: mongodb://127.0.0.1/intelliQ
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: failed
                  dbconnection:
                    type: string
                    example: mongodb://127.0.0.1/intelliQ
  /admin/questionnaire_upd:
    post:
      tags:
        - Admin
      description: Update the questionnaire
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                json_file:
                  type: string
                  format: binary
                  description: JSON file (Blank questionnaire) encoded in multipart form data
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: OK
        400:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: failed
                  dbconnection:
                    type: string
                    example: error message
          
  /admin/resetall:
    post:
      tags:
        - Admin
      description: Reset all questionnaires and answers
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: OK
        400:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: failed
                  error:
                    type: string
                    example: error message
  /admin/resetq/{questionnaireID}:
    post:
      tags:
        - Admin
      description: Reset a specific questionnaire and its answers
      parameters:
        - name: questionnaireID
          in: path
          required: true
          description: ID of the questionnaire to reset
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: OK
        400:
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: failed
                  error:
                    type: string
                    example: error message
        402:
          description: Questionnaire does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: failed
                  error:
                    type: string
                    example: Questionnaire does not exist
  
  /questionnaire/{questionnaireID}:
    get:
      tags:
        - IntelliQ
      summary: //a
      description: Retrieve a questionnaire by ID. Questions are sorted in alphabetical order.
      parameters:
        - in: path
          name: questionnaireID
          required: true
          description: ID of the questionnaire to retrieve
          schema:
            type: string
        - in: query
          name: format
          required: false
          description: Output format for the questionnaire data
          schema:
            type: string
            enum: [json, csv]
      responses:
        200:
          description: Successfully retrieved the questionnaire
          content:
            application/json:
              schema:
                type: object
                properties:
                  questionnaireID:
                    type: string
                    description: ID of the questionnaire
                  questionnaireTitle:
                    type: string
                    description: Title of the questionnaire
                  keywords:
                    type: array
                    description: Keywords associated with the questionnaire
                    items:
                      type: string
                  questions:
                    type: array
                    description: List of questions in the questionnaire
                    items:
                      type: object
                      properties:
                        qID:
                          type: string
                          description: ID of the question
                        qtext:
                          type: string
                          description: Text of the question
                        required:
                          type: string
                          description: Indicates if the question is required
                        type:
                          type: string
                          description: Type of the question
            text/csv:
              schema:
                type: string
        400:
          description: Bad Request - Format must be set to either json or csv
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: failed
                  error:
                    type: string
                    example: error message
        402:
          description: The questionnaire is empty or does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: failed
                  error:
                    type: string
                    example: error message
  /question/{questionnaireID}/{questionID}:
    get:
      tags:
        - IntelliQ
      summary: //b
      description: Returns a specific question and it's options of a questionnaire. Options are sorted by option id.
      parameters:
        - in: path
          name: questionnaireID
          description: ID of the questionnaire
          required: true
          schema:
            type: string
        - in: path
          name: questionID
          description: ID of the question
          required: true
          schema:
            type: string
        - in: query
          name: format
          description: Format of the response data (json or csv)
          required: false
          schema:
            type: string
            enum: [json, csv]
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  questionnaireID:
                    type: string
                    description: ID of the questionnaire
                  qID:
                    type: string
                    description: ID of the question
                  qtext:
                    type: string
                    description: Text of the question
                  required:
                    type: string
                    description: A boolean indicating whether the question is required or not
                  type:
                    type: string
                    description: Type of the question (e.g. multiple choice, text)
                  options:
                    type: array
                    description: Array of options for the question
                    items:
                      type: object
                      properties:
                        optID:
                          type: string
                          description: ID of the option
                        opttxt:
                          type: string
                          description: Text of the option
                        nextqID:
                          type: string
                          description: ID of the next question to be asked based on the selected option
            text/csv:
              schema:
                type: string
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: failed
                  error:
                    type: string
                    example: error message
        402:
          description: The questionnaire is empty or does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: failed
                  error:
                    type: string
                    example: error message
  /doanswer/{questionnaireID}/{questionID}/{session}/{optionID}:
    post:
      tags:
        - IntelliQ
      summary: //c
      description: Endpoint that saves the selected question's answer for a specific session
      parameters:
        - name: questionnaireID
          in: path
          required: true
          schema:
            type: string
        - name: questionID
          in: path
          required: true
          schema:
            type: string
        - name: session
          in: path
          required: true
          schema:
            type: string
        - name: optionID
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Success
        400:
          description: Bad request
      #needs update!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
  /getsessionanswers/{questionnaireID}/{session}:

    get:
      tags:
        - IntelliQ
      summary: //d
      description: Returns the answers of a questionnaire for a specific session
      parameters:
        - name: questionnaireID
          in: path
          required: true
          description: ID of the questionnaire
          schema:
            type: string
        - name: session
          in: path
          required: true
          description: ID of the session
          schema:
            type: string
        - name: format
          in: query
          description: format of response data (either json or csv)
          schema:
            type: string
      responses:
        200:
          description: Successfully returned the answers for the specified questionnaire and session
          content:
            application/json:
              schema:
                type: object
                properties:
                  questionnaireID:
                    type: string
                  session:
                    type: string
                  answers:
                    type: array
                    items:
                      type: object
                      properties:
                        qID:
                          type: string
                        qtext:
                          type: string
                        ans:
                          type: string
                        anstxt:
                          type: string
            text/csv:
              schema:
                type: string
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: failed
                  error:
                    type: string
                    example: error message
        402:
          description: The questionnaire is empty or does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: failed
                  error:
                    type: string
                    example: error message
  
  /getquestionanswers/{questionnaireID}/{questionID}:
    get:
      tags:
        - IntelliQ
      summary: //e
      description: Returns the answer of a specific question from a specific questionnaire for all sessions.
      parameters:
        - name: questionnaireID
          in: path
          required: true
          description: ID of the questionnaire
          schema:
            type: string
        - name: questionID
          in: path
          required: true
          description: ID of the question
          schema:
            type: string
        - name: format
          in: query
          required: false
          description: The format of the response data, either "json" or "csv". If not provided, defaults to "json".
          schema:
            type: string
            enum: [json, csv]
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  questionnaireID:
                    type: string
                    description: ID of the questionnaire
                  questionID:
                    type: string
                    description: ID of the question
                  answers:
                    type: array
                    items:
                      type: object
                      properties:
                        session:
                          type: string
                          description: Session ID
                        ans:
                          type: string
                          description: Answer to the question
            text/csv:
              schema:
                type: string
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: failed
                  error:
                    type: string
                    example: error message
        402:
          description: The question of the questionnaire does not exist.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: failed
                  error:
                    type: string
                    example: error message

  /questionnaires:
    get:
      tags:
        - IntelliQ
      summary: extra endpoint
      description: Retrieve a list of all available questionnaires
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    _id:
                      type: string
                    title:
                      type: string
                    questions:
                      type: array
                      items:
                        type: object
                        properties:
                          qID:
                            type: string
                          qtext:
                            type: string
                          options:
                            type: array
                            items:
                              type: object
                              properties:
                                optID:
                                  type: string
                                nextqID:
                                  type: string
                                opttext:
                                  type: string
        402:
          description: Error response indicating that no questionnaires have been saved
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  status:
                    type: string
      security: []


  /givenextqid/{questionnaireID}/{questionID}/{optionID}:
    get:
      tags:
        - IntelliQ
      summary: extra endpoint
      description: Retrieve the next question based on the provided questionnaireID, questionID, and optionID
      parameters:
        - in: path
          name: questionnaireID
          description: The ID of the questionnaire
          required: true
          schema:
            type: string
        - in: path
          name: questionID
          description: The ID of the question
          required: true
          schema:
            type: string
        - in: path
          name: optionID
          description: The ID of the option
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  optID:
                    type: string
                  nextqID:
                    type: string
                  opttext:
                    type: string
        402:
          description: Error response indicating that the questionnaire, question, or option does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  status:
                    type: string
                                    
  /holeBlank/{questionnaireID}:
    get:
      tags:
        - IntelliQ
      summary: Extra endpoint
      description: Retrieve a hole questionnaire
      parameters:
        - in: path
          name: questionnaireID
          required: true
          schema:
            type: string
          description: The ID of the questionnaire to retrieve
      responses:
        '200':
          description: A successful response with the requested questionnaire
          content:
            application/json:
                schema:
                  $ref: "#/components/schemas/BlankSchema"
                example:
                  $ref: "#/components/examples/BlankSchema"
                
        '402':
          description: No questionnaire found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: failed
                  error:
                    type: string
                    example: No questionnaire found        